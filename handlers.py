from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from database import get_session, User, Hero, Term, QuizQuestion, ShopItem
import json
from datetime import datetime

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∞ "–ì–µ—Ä–æ–∏"
@router.callback_query(F.data == "heroes")
async def show_heroes(callback: CallbackQuery):
    session = get_session()
    heroes = session.query(Hero).all()
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for hero in heroes:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(
                text=f"{hero.name} ({hero.role})",
                callback_data=f"hero_{hero.id}"
            )
        ])
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ—Ä–æ—è:",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–µ—Ä–æ—è
@router.callback_query(F.data.startswith("hero_"))
async def show_hero(callback: CallbackQuery):
    hero_id = int(callback.data.split("_")[1])
    session = get_session()
    hero = session.query(Hero).filter_by(id=hero_id).first()
    
    if hero:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="heroes")]
        ])
        
        await callback.message.edit_text(
            f"üèÜ {hero.name}\n\n"
            f"–†–æ–ª—å: {hero.role}\n"
            f"–°–ª–æ–∂–Ω–æ—Å—Ç—å: {hero.difficulty}\n"
            f"–í–∏–Ω—Ä–µ–π—Ç: {hero.win_rate}%\n"
            f"–¢–∏—Ä: {hero.tier}\n\n"
            f"–ì–∞–π–¥:\n{hero.guide}",
            reply_markup=keyboard
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∞ "–¢–∏—Ä-–ª–∏—Å—Ç"
@router.callback_query(F.data == "tier_list")
async def show_tier_list(callback: CallbackQuery):
    session = get_session()
    heroes = session.query(Hero).order_by(Hero.tier).all()
    
    tier_s = [h for h in heroes if h.tier == "S"]
    tier_a = [h for h in heroes if h.tier == "A"]
    tier_b = [h for h in heroes if h.tier == "B"]
    
    text = "üèÜ –¢–∏—Ä-–ª–∏—Å—Ç 2025\n\n"
    text += "S-—Ç–∏—Ä:\n" + "\n".join([f"‚Ä¢ {h.name}" for h in tier_s]) + "\n\n"
    text += "A-—Ç–∏—Ä:\n" + "\n".join([f"‚Ä¢ {h.name}" for h in tier_a]) + "\n\n"
    text += "B-—Ç–∏—Ä:\n" + "\n".join([f"‚Ä¢ {h.name}" for h in tier_b])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∞ "–°–ª–æ–≤–∞—Ä—å"
@router.callback_query(F.data == "dictionary")
async def show_dictionary(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫", callback_data="search_term")],
        [InlineKeyboardButton(text="üî§ –ê–ª—Ñ–∞–≤–∏—Ç", callback_data="alphabet")],
        [InlineKeyboardButton(text="üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="categories")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
    ])
    
    await callback.message.edit_text(
        "üìò –°–ª–æ–≤–∞—Ä—å —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ —Å–ª–µ–Ω–≥–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞:",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∞ "–ü—Ä–æ—Ñ–∏–ª—å"
@router.callback_query(F.data == "profile")
async def show_profile(callback: CallbackQuery):
    session = get_session()
    user = session.query(User).filter_by(telegram_id=callback.from_user.id).first()
    
    if not user:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="create_profile")]
        ])
        await callback.message.edit_text(
            "üë§ –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω\n\n"
            "–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤, —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–º–µ—Ç–∫–∏.",
            reply_markup=keyboard
        )
        return
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚≠êÔ∏è –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –≥–µ—Ä–æ–∏", callback_data="favorites")],
        [InlineKeyboardButton(text="üéØ –°–±–æ—Ä–∫–∏", callback_data="builds")],
        [InlineKeyboardButton(text="üìù –ó–∞–º–µ—Ç–∫–∏", callback_data="notes")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
    ])
    
    await callback.message.edit_text(
        f"üë§ –ü—Ä–æ—Ñ–∏–ª—å\n\n"
        f"–ù–∏–∫: {user.nickname}\n"
        f"ID: {user.game_id}\n"
        f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.created_at.strftime('%d.%m.%Y')}",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∞ "–ú–∞–≥–∞–∑–∏–Ω"
@router.callback_query(F.data == "shop")
async def show_shop(callback: CallbackQuery):
    session = get_session()
    items = session.query(ShopItem).filter_by(status="approved").all()
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíé –ê–ª–º–∞–∑—ã", callback_data="shop_diamonds")],
        [InlineKeyboardButton(text="üé® –°–∫–∏–Ω—ã", callback_data="shop_skins")],
        [InlineKeyboardButton(text="üë§ –ê–∫–∫–∞—É–Ω—Ç—ã", callback_data="shop_accounts")],
        [InlineKeyboardButton(text="üßô‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∏", callback_data="shop_services")],
        [InlineKeyboardButton(text="üì¶ –í—ã—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="add_item")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
    ])
    
    await callback.message.edit_text(
        "üõç –ú–∞–≥–∞–∑–∏–Ω\n\n"
        "‚ö†Ô∏è –í—Å–µ —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ë–æ—Ç –Ω–µ –Ω–µ—Å—ë—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø–µ—Ä–µ–¥–∞—á—É —Ç–æ–≤–∞—Ä–æ–≤. –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.callback_query(F.data == "back_to_menu")
async def back_to_menu(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üÉè –ì–µ—Ä–æ–∏", callback_data="heroes"),
            InlineKeyboardButton(text="üß† –¢–∏—Ä-–ª–∏—Å—Ç", callback_data="tier_list")
        ],
        [
            InlineKeyboardButton(text="üìò –°–ª–æ–≤–∞—Ä—å", callback_data="dictionary"),
            InlineKeyboardButton(text="üé≠ –õ–µ–≥–µ–Ω–¥—ã", callback_data="legends")
        ],
        [
            InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile"),
            InlineKeyboardButton(text="‚òÄÔ∏è –°–æ–≤–µ—Ç", callback_data="daily_tip")
        ],
        [
            InlineKeyboardButton(text="üéÆ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞", callback_data="quiz"),
            InlineKeyboardButton(text="üõç –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")
        ]
    ])
    
    await callback.message.edit_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ML Helper AI! üéÆ\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=keyboard
    ) 